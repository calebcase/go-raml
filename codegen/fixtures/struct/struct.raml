#%RAML 1.0
title: Struct API Test
mediaType: application/json
types:
  EnumCity:
    description: city of angel city of angel city of angel city of angel city of angel city of angel city of angel city of angel city of angelcity of angelcity of angelcity of angelcity of angel city of angel
    properties:
      name: string
      enum_parks:
        type: string
        enum: [ park_a, park_b ]
      enum_homeNum:
        type: integer
        enum: [ 1, 2, 3 ]
  animal:
    description: |
      Animal represent animal object.
      It contains field that construct animal
      such as : name, colours, and cities.
    type: object
    properties:
      name?: string
      colours:
        type: string[]
      cities: 
        type: EnumCity[]
        minItems: 1
        maxItems: 10
  Cage:
    description: |
      Animal's cage
    type: object
    properties:
      owner:
        type: animal
      colours:
        type: string

  SingleInheritance:
    type: animal
    properties:
      name:
        type: string
  Cat:
    properties:
      kind:
        type: string
  MultipleInheritance:
    type: [ animal , Cat ]
    properties:
      color:
        type: string
  ArrayOfCats:
    type: Cat[]
    minItems: 1
    maxItems: 4
    uniqueItems: true
  BidimensionalArrayOfCats:
    type: Cat[][]
  EnumString:
    type: string
    enum: [ str_a, str_b ]
  Pet:
    type: Cat | animal
    discriminator: kind
  ArrayOfPets:
    type: (Cat | animal)[]
  Specialization:
    type: number
    minimum: 0
  petshop:
    properties:
      name:
        type: string
      cats:
        type: Cat[]
  ValidationString:
    properties:
      name:
        type: string
        minLength: 8
        maxLength: 40
/users:
  post:
    description: create a user
    body:
      application/json:
        properties:
          age:
            type: integer
            minimum: 16
            maximum: 100
            multipleOf: 4
          ID:
            type: string
            minLength: 4
            maxLength: 8
          item:
            minLength: 2
            pattern: ^[a-zA-Z]+$
          grades:
            type: integer[]
            minItems: 2
            maxItems: 5
            uniqueItems: true
  /{id}:
    get:
      description: |
        get id of users.
        This method will be return single user object.
        Replace ID with user defined field.
      responses:
        200:
          body:
            application/json:
              properties:
                age: integer
                ID:
